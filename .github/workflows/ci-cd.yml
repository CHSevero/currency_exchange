name: CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          
      - name: Install UV
        run: curl -LsSf https://astral.sh/uv/install.sh | sh
        
      - name: Add UV to PATH
        run: echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
      - name: Create virtual environment and install dependencies
        run: |
          uv venv
          . .venv/bin/activate
          uv pip install -e .
          uv pip install ruff pytest
          
      - name: Run Ruff linting
        run: |
          . .venv/bin/activate
          uv run ruff check .
          uv run ruff format --check .
          
      - name: Run tests
        run: |
          . .venv/bin/activate
          uv run pytest

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install render-deploy CLI
        run: npm install -g @renderinc/cli
      
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Create virtual environment and install dependencies
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          export PATH="$HOME/.cargo/bin:$PATH"
          uv venv
          . .venv/bin/activate
          uv pip install -e .
      
      - name: Deploy to Render
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
        run: |
          render deploy --service-id="${{ secrets.RENDER_SERVICE_ID }}" --api-key="${{ secrets.RENDER_API_KEY }}"
